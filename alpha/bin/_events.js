// Generated by CoffeeScript 1.7.1
(function() {
  define(["jquery", "keys"], function($, K) {
    var Events;
    Events = (function() {
      function Events(grid) {
        console.log("Initializing events...");
        this.grid = grid;
        this.functions = [];
        this.movers = [];
        this.special = [];
        this.fill();
        this.pos = 0;
        this.ux = this.grid.ux;
        this.uy = this.grid.uy;
        this.edit = true;
      }

      Events.prototype.fill = function() {
        var f, fs, m, ms, s, ss, _i, _j, _k, _len, _len1, _len2, _results;
        fs = [K.f1, K.f2, K.f3, K.f4, K.f5, K.f6, K.f7, K.f8, K.f9, K.f10, K.f11, K.f12, K.del, K.ctrl, K.meta, K.shift, K.alt];
        ss = [K.bquote, K.quote, K.open, K.close, K.tab, K.enter];
        ms = [K.up, K.down, K.left, K.right];
        for (_i = 0, _len = fs.length; _i < _len; _i++) {
          f = fs[_i];
          this.functions[f] = true;
        }
        for (_j = 0, _len1 = ss.length; _j < _len1; _j++) {
          s = ss[_j];
          this.special[s] = true;
        }
        _results = [];
        for (_k = 0, _len2 = ms.length; _k < _len2; _k++) {
          m = ms[_k];
          _results.push(this.movers[m] = true);
        }
        return _results;
      };

      Events.prototype.move = function(key) {
        switch (key) {
          case K.up:
            if (this.pos > this.ux) {
              return this.pos = this.pos - this.ux;
            }
            break;
          case K.down:
            return this.pos = this.pos + this.ux;
        }
      };

      Events.prototype.type = function(key) {
        var char, text;
        this.pos = this.pos + 1;
        text = $("textarea").val();
        char = K.translate(key);
        text = "" + text + char;
        $("textarea").val(text);
        return this.grid.type(this.pos, char);
      };

      Events.prototype.reload = function(key) {
        if (K.pressed[K.ctrl] && (key === K.r)) {
          return window.location.reload();
        }
      };

      Events.prototype.press = function() {
        var self;
        self = this;
        $(document).on("keydown", function(e) {
          var key;
          e.preventDefault();
          key = e.keyCode;
          self.reload(key);
          if (self.edit) {
            $("textarea").focus();
          }
          if (self.movers[key]) {
            self.move(key);
          }
          if (!(self.functions[key] || self.movers[key])) {
            self.type(key);
          }
          return K.set(key, true);
        });
        return $(document).on("keyup", function(e) {
          var key;
          key = e.keyCode;
          return K.set(key, false);
        });
      };

      return Events;

    })();
    return Events;
  });

}).call(this);
